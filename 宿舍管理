#include<stdio.h>
#include<cstring>
#include<fstream>
#include<iostream>
using namespace std;
struct member
{
	char sex;//成员性别
	char name[5];//成员姓名
	char num[10];//成员学号
	char clas[10];//成员班级信息
	int bed;//成员床位
};
struct room
{
	struct member m[6];//寝室成员
	char num[10];//寝室编号
	int bed[6];//寝室床位
	int q;//寝室可入住人数
};
struct build
{
	char sex;//女寝或男寝
	int num;//寝室楼编号
	struct room r[10];
	int sum;//寝室房间数
};
struct builds
{
	struct build b[5];
	int sum;//寝室楼数  
};
void find1(struct builds a)//完成
{
	int i, j, k, m = 0;
	int n;
	char c[30];
	printf("若按姓名输入查询请输入‘1’，若按学号输入查询请输入‘2’：");
	scanf_s("%d", &n);
	if (n == 1)
	{
		printf("请输入要查询人员的姓名：");
		cin >> c;
		for (i = 0; i < a.sum; i++)
		{
			for (j = 0; j < a.b[i].sum; j++)
			{
				for (k = 0; k <= a.b[i].r[j].q; k++)
				{
					int ff = strcmp(a.b[i].r[j].m[k].name, c);
					if (ff == 0 && a.b[i].r[j].bed[k] != 0)
					{
						printf("该学生所处寝室：%d-%s\n", a.b[i].num, a.b[i].r[j].num);
						printf("该学生床位：%d\n", a.b[i].r[j].m[k].bed);
						printf("该学生姓名：%s\n", a.b[i].r[j].m[k].name);
						printf("该学生性别：%c\n", a.b[i].r[j].m[k].sex);
						printf("该学生学号：%s\n", a.b[i].r[j].m[k].num);
						printf("该学生班级：%s\n", a.b[i].r[j].m[k].clas);
						m++;
					}
				}
			}
		}
		if (m == 0)
		{
			printf("当前查询人员未录入系统，请先将其录入系统！");
			return;
		}
	}

	if (n == 2)
	{
		printf("请输入要查询人员的学号：");
		cin >> c;
		for (i = 0; i < a.sum; i++)
		{
			for (j = 0; j < a.b[i].sum; j++)
			{
				for (k = 0; k < a.b[i].r[j].q; k++)
				{
					if (strcmp(a.b[i].r[j].m[k].num, c) == 0 && a.b[i].r[j].bed[k] != 0)
					{
						printf("该学生所处寝室：%d-", a.b[i].num);
						cout << a.b[i].r[j].num << endl;;
						printf("该学生床位：%d\n", a.b[i].r[j].m[k].bed);
						printf("该学生姓名：%s\n", a.b[i].r[j].m[k].name);
						printf("该学生性别：%c\n", a.b[i].r[j].m[k].sex);
						printf("该学生学号：%s\n", a.b[i].r[j].m[k].num);
						printf("该学生班级：%s\n", a.b[i].r[j].m[k].clas);
						m++;
					}
				}

			}
		}
		if (m == 0)
		{
			printf("当前查询人员未录入系统，请先将其录入系统！\n");
		}
	}

	return;
}
void find2(struct builds a)//完成
{
	int i, j, k, n, m = 0;
	char c[30];
	printf("请输入要查询人员所处的班级：");
	cin >> c;
	for (i = 0; i < a.sum; i++)
	{
		for (j = 0; j < a.b[i].sum; j++)
		{
			for (k = 0; k < a.b[i].r[j].q; k++)
			{
				if (strcmp(a.b[i].r[j].m[k].clas, c) == 0 && a.b[i].r[j].bed[k] != 0)
				{
					printf("该学生所处寝室：%d-", a.b[i].num);
					cout << a.b[i].r[j].num << endl;;
					printf("该学生床位：%d\n", a.b[i].r[j].m[k].bed);
					printf("该学生姓名：%s\n", a.b[i].r[j].m[k].name);
					printf("该学生性别：%c\n", a.b[i].r[j].m[k].sex);
					printf("该学生学号：%s\n", a.b[i].r[j].m[k].num);
					printf("该学生班级：%s\n", a.b[i].r[j].m[k].clas);
					m++;
				}
			}

		}

	}
	if (m == 0)
	{
		printf("当前查询班级无人录入系统，请先将其录入系统！\n");
		return;
	}
	return;
}
void find3(struct builds a)//完成
{
	int n, i, j, k, m = 0;
	char c[30];
	printf("请输入要查询人员所处寝室楼编号：");
	scanf_s("%d", &n);
	printf("请输入要查询人员所处寝室编号：");
	cin >> c;
	for (i = 0; i < a.sum; i++)
	{
		for (j = 0; j < a.b[i].sum; j++)
		{
			for (k = 0; k < a.b[i].r[j].q; k++)
			{
				if (a.b[i].num == n && strcmp(a.b[i].r[j].num, c) == 0 && a.b[i].r[j].bed[k] != 0)
				{
					printf("该学生所处寝室：%d-", a.b[i].num);
					cout << a.b[i].r[j].num << endl;
					printf("该学生床位：%d\n", a.b[i].r[j].m[k].bed);
					printf("该学生姓名：%s\n", a.b[i].r[j].m[k].name);
					printf("该学生性别：%c\n", a.b[i].r[j].m[k].sex);
					printf("该学生学号：%s\n", a.b[i].r[j].m[k].num);
					printf("该学生班级：%s\n", a.b[i].r[j].m[k].clas);
					m++;

				}
				else if (a.b[i].num == n && strcmp(a.b[i].r[j].num, c) == 0 && a.b[i].r[j].bed[k] == 0)
				{
					cout << a.b[i].num << "-" << a.b[i].r[j].num << "寝室";
					printf("%d号床无人入住\n", k + 1);
				}
			}
			cout << endl;
		}
	}
	return;
}
int del1(struct builds& a)//完成
{
	int i, j, k, zz;
	int flag = 0;
	char c[30];
	printf("若按姓名输入删除请输入‘1’，若按学号输入删除请输入‘2’：");
	scanf_s("%d", &zz);
	if (zz == 1)
	{
		printf("请输入所要删除学生姓名：");
		cin >> c;
		for (i = 0; i < a.sum; i++)
		{
			for (j = 0; j < a.b[i].sum; j++)
			{
				for (k = 0; k < a.b[i].r[j].q; k++)
				{
					if (strcmp(a.b[i].r[j].m[k].name, c) == 0)
					{
						a.b[i].r[j].bed[k] = 0;
						flag = 1;
						return flag;
					}
				}
			}
		}
	}
	if (zz == 2)
	{
		printf("请输入所要删除学生学号：");
		cin >> c;
		for (i = 0; i < a.sum; i++)
		{
			for (j = 0; j < a.b[i].sum; j++)
			{
				for (k = 0; k < a.b[i].r[j].q; k++)
				{
					if (strcmp(a.b[i].r[j].m[k].num, c) == 0)
					{
						a.b[i].r[j].bed[k] = 0;
						flag = 1;
						return flag;
					}
				}
			}
		}
	}
	return 0;
}
int del2(struct builds& a)//完成
{
	int i, j, k;
	char c[30];
	printf("请输入所要删除学生所处班级：");
	cin >> c;
	int flag = 0;
	for (i = 0; i < a.sum; i++)
	{
		for (j = 0; j < a.b[i].sum; j++)
		{
			for (k = 0; k < a.b[i].r[j].q; k++)
			{
				if (strcmp(a.b[i].r[j].m[k].clas, c) == 0)
				{
					a.b[i].r[j].bed[k] = 0;
					flag = 1;

				}
			}
		}
	}
	return flag;
}
int del3(struct builds& a)//完成
{
	int n, i, j, k;
	char c[30];
	int flag = 0;
	printf("请输入所要删除学生所处寝室楼编号：");
	scanf_s("%d", &n);
	printf("请输入所要删除学生所处寝室编号：");
	cin >> c;
	for (i = 0; i < a.sum; i++)
	{
		for (j = 0; j < a.b[i].sum; j++)
		{
			if (a.b[i].num == n && strcmp(a.b[i].r[j].num, c) == 0)
			{
				for (k = 0; k < a.b[i].r[j].q; k++)
				{
					a.b[i].r[j].bed[k] = 0;
					flag = 1;
				}
			}
		}
	}
	return flag;
}
void in(struct builds& a)
{
	int n, j, t = -1, m = -1;
	char c[30];
	char z;
	printf("请输入当前录入学生所在寝室楼编号：");
	scanf_s("%d", &n);
	for (j = 0; j < a.sum; j++)
	{
		if (n == a.b[j].num)
		{
			t = j;
		}
	}
	if (t == -1)
	{
		cout << "无该编号寝室楼" << endl;
		return;
	}
	printf("请输入当前录入学生性别：");
	cin >> z;
	if (z != a.b[t].sex)
	{
		printf("该寝室为%c寝，请重新选择寝室！", a.b[t].sex);
		in(a);
		return;
	}
	printf("请输入当前录入学生所在寝室编号：");
	cin >> c;
	for (j = 0; j < a.b[t].sum; j++)
	{
		if (strcmp(c, a.b[t].r[j].num) == 0)
		{
			m = j;
		}
	}
	if (t == -1)
	{
		cout << "无该编号寝室" << endl;
		return;
	}
	int lo;
	printf("请输入当前录入学生床位：");
	scanf_s("%d", &n);
	if (a.b[t].r[m].bed[n - 1] == 0)
	{
		a.b[t].r[m].m[n - 1].bed = n;
		a.b[t].r[m].bed[n - 1] = n;
		a.b[t].r[m].m[n - 1].sex = z;
		printf("请输入当前录入学生姓名：");
		cin >> a.b[t].r[m].m[n - 1].name;
		printf("请输入当前录入学生学号：");
		cin >> a.b[t].r[m].m[n - 1].num;
		printf("请输入当前录入学生班级：");
		cin >> a.b[t].r[m].m[n - 1].clas;
		printf("录入成功！如需要继续录入信息可按回车，否则请输入‘n’退回上级操作：");
		scanf_s("%c", &z);
		scanf_s("%c", &z);
	}
	else
	{
		cout << "该床位已有人" << endl;
		return;
	}
	if (z == '\n')
	{
		in(a);
	}
	else
	{
		return;
	}
}
void change(struct builds& a)
{
	int n, i, j, k;
	int i1, j1, k1;
	int flag = 0;
	int chuang;
	int lou;
	char c[30], z;
	printf("请输入所要修改信息学生的姓名：\n");
	cin >> c;
	printf("如需修改寝室信息请输入‘1’，如需修改个人信息请输入‘2’：");
	scanf_s("%d", &n);
	if (n == 1)
	{
		for (i1 = 0; i1 < a.sum; i1++)
		{
			for (j1 = 0; j1 < a.b[i1].sum; j1++)
			{
				for (k1 = 0; k1 < a.b[i1].r[j1].q; k1++)
				{
					if (strcmp(a.b[i1].r[j1].m[k1].name, c) == 0)
					{
						flag++;
						a.b[i1].r[j1].bed[k1] = 0;
						break;
					}
				}
				if (flag == 1)
				{
					break;
				}
			}
			if (flag == 1)
			{
				break;
			}
		}
		if (flag == 0)
		{
			cout << "该人员未录入寝室，请重新输入！";
			return;
		}
		printf("请输入所要修改学生将住入寝室楼编号：");
		scanf_s("%d", &lou);
		printf("请输入所要修改学生将住入寝室编号：");
		cin >> c;
		printf("请输入所要修改信息学生将入住的床位：");
		scanf_s("%d", &chuang);
		for (i = 0; i < a.sum; i++)
		{
			for (j = 0; j < a.b[i].sum; j++)
			{

				if (a.b[i].num == lou && strcmp(a.b[i].r[j].num, c) == 0 && a.b[i].r[j].bed[chuang - 1] == 0)
				{
					printf("该寝室%d床目前无人使用，可以入住!\n", chuang);
					a.b[i].r[j].m[chuang - 1].bed = chuang;
					strcpy_s(a.b[i].r[j].m[chuang - 1].clas, a.b[i1].r[j1].m[k1].clas);
					strcpy_s(a.b[i].r[j].m[chuang - 1].name, a.b[i1].r[j1].m[k1].name);
					strcpy_s(a.b[i].r[j].m[chuang - 1].num, a.b[i1].r[j1].m[k1].num);
					a.b[i].r[j].m[chuang - 1].sex = a.b[i1].r[j1].m[k1].sex;
					a.b[i].r[j].bed[chuang - 1] = chuang;
					return;
				}
				else if (a.b[i].num == n && strcmp(a.b[i].r[j].num, c) == 0 && a.b[i].r[j].bed[chuang] != 0)
				{
					cout << "此床位已经有人" << endl;
					return;
				}
			}
		}
	}
	if (n == 2)
	{
		for (i = 0; i < a.sum; i++)
		{
			for (j = 0; j < a.b[i].sum; j++)
			{
				for (k = 0; k < a.b[i].r[j].q; k++)
				{
					if (strcmp(a.b[i].r[j].m[k].name, c) == 0)
					{
						printf("请输入所要修改学生学号：");
						cin >> a.b[i].r[j].m[k].num;
						printf("请输入所要修改学生班级：");
						cin >> a.b[i].r[j].m[k].clas;
						flag = 1;
					}
				}
			}
		}
	}
	if (flag == 1)
	{
		printf("修改成功！如需要继续修改信息可按回车，否则请输入‘n’退回上级操作：");
	}
	else
	{
		cout << "无该成员" << endl;
	}
	scanf_s("%c", &z);
	scanf_s("%c", &z);
	if (z == 'n')
	{
		return;
	}
	if (z == '\n')
	{
		change(a);
	}
}
void del(struct builds& a)//完成
{
	int n;
	char z;
	int flag = 0;
	printf("请选择:\n");
	printf("          1.删除单个成员信息\n");
	printf("          2.删除某班级成员信息\n");
	printf("          3.删除某寝室成员信息\n");
	printf("请输入指令：");
	scanf_s("%d", &n);
	if (n == 1)
		flag = del1(a);
	if (n == 2)
		flag = del2(a);
	if (n == 3)
		flag = del3(a);
	if (flag == 1)
		printf("删除成功！如需要继续删除操作可按回车，否则请输入‘n’退回上级操作：");
	if (flag == 0)
	{
		cout << "无该成员" << endl;
		return;
	}
	scanf_s("%c", &z);
	scanf_s("%c", &z);
	if (z == 'n')
	{
		cout << endl;
		return;
	}
	if (z == '\n')
	{
		del(a);
	}
}
void add(struct builds& a)
{
	int n, i, j, k, t = -1, m = -1;
	char c[30], z;
	printf("请输入所要添加学生将住入寝室编号：");
	scanf_s("%d", &n);
	for (i = 0; i < a.sum; i++)
	{
		if (n == a.b[i].num)
		{
			t = i;
		}
	}
	if (t == -1)
	{
		cout << "无该编号寝室" << endl;
		return;
	}
	printf("请输入所要添加学生性别：");
	cin >> z;
	if (z != a.b[t].sex)
	{
		printf("该寝室为%c寝，请重新选择寝室！", a.b[t].sex);
		add(a);
		return;
	}
	printf("请输入所要添加学生将入住寝室编号：");
	cin >> c;
	for (j = 0; j < a.b[t].sum; j++)
	{
		if (strcmp(c, a.b[t].r[j].num) == 0)
		{
			m = j;
		}
	}
	for (k = 0; k < a.b[i].r[j].q; k++)
	{
		if (a.b[i].num == n && strcmp(a.b[i].r[j].num, c) == 0 && a.b[i].r[j].bed[k] == 0)
		{
			printf("该寝室目前%c床无人使用，可以入住!\n", k + 1);
		}
		else
		{
			printf("该寝室目前已满，请重新选择寝室！\n");
			add(a);
			return;
		}
		printf("请输入添加学生的床位：");
		scanf_s("%d", &n);
		a.b[i].r[j].m[n - 1].bed = n;
		a.b[i].r[j].bed[n - 1] = n;
		printf("请输入添加学生的姓名：");
		cin >> a.b[i].r[j].m[n - 1].name;
		printf("请输入添加学生的性别：");
		scanf_s("%c", &a.b[i].r[j].m[n - 1].sex);
		printf("请输入添加学生的学号：");
		cin >> a.b[i].r[j].m[n - 1].num;
		printf("请输入添加学生的班级：");
		cin >> a.b[i].r[j].m[n - 1].clas;
	}
	printf("添加完毕！如需要继续添加可按回车，否则请输入‘n’退回上级操作：");
	scanf_s("%c", &z);
	if (z == 'n')
	{
		return;
	}
	if (z == '\n')
	{
		add(a);
	}
}
void find(struct builds a)
{
	int n;
	char z;
	printf("请选择:\n");
	printf("         1.查询单个成员信息\n");
	printf("         2.查询某班级成员信息\n");
	printf("         3.查询某寝室成员信息\n");
	scanf_s("%d", &n);
	if (n == 1)
		find1(a);
	if (n == 2)
		find2(a);
	if (n == 3)
		find3(a);
	printf("查询完毕！如需要继续查询信息可按回车，否则请输入‘n’退回上级操作：");
	scanf_s("%c", &z);
	scanf_s("%c", &z);
	if (z == 'n')
	{
		cout << endl;
		return;
	}
	if (z == '\n')
	{
		find(a);
	}
}
int main()
{
	struct builds a;
	int i, j, n, k;
	char ffff;
	cout << endl;
	printf("             ***************************************\n\n\n\n");
	printf("                         欢迎使用本系统             \n\n\n\n");
	printf("            *****************************************\n");
	cout << "                         本系统m为男性，n为女性  " << endl;
	printf("请先输入基础信息");
	printf("请输入总楼数：");
	scanf_s("%d", &a.sum);
	for (i = 0; i < a.sum; i++)
	{
		printf("请输入第%d栋楼的信息\n", i + 1);
		printf("请输入该楼编号：");
		scanf_s("%d", &a.b[i].num);
		printf("请输入该楼为女寝还是男寝：");
		scanf_s("%c", &a.b[i].sex);
		scanf_s("%c", &a.b[i].sex);
		scanf_s("%c", &ffff);
		printf("请输入该楼总寝室数：");
		scanf_s("%d", &a.b[i].sum);
		for (j = 0; j < a.b[i].sum; j++)
		{
			printf("请输入第%d个寝室的信息\n", j + 1);
			printf("请输入该寝室编号：");
			cin >> a.b[i].r[j].num;
			printf("请输入该寝室为几人寝");
			scanf_s("%d", &a.b[i].r[j].q);
		}
	}
	for (i = 0; i < a.sum; i++)
	{
		for (j = 0; j < a.b[i].sum; j++)
		{
			for (k = 0; k < a.b[i].r[j].q; k++)
			{
				a.b[i].r[j].bed[k] = 0;
			}
		}
	}
	for (;;)
	{
		cout << endl << endl;
		printf("             ***************************************\n");
		printf("                         请选择以下功能             \n");
		printf("                   1.输入宿舍人员信息      \n");
		printf("                   2.修改宿舍人员信息      \n");
		printf("                   3.删除宿舍人员信息      \n");
		printf("                   4.查询宿舍人员信息      \n");
		printf("                   5.退出系统               \n");
		printf("            *****************************************\n");
		printf("请输入指令:");
		cin >> n;
		if (n == 1)
			in(a);
		if (n == 2)
			change(a);
		if (n == 3)
			del(a);
		if (n == 4)
			find(a);
		if (n == 5)
		{
			printf("            感谢您的使用，欢迎下次使用！");
			break;
		}
		n = 0;
	}
	ofstream text;
	text.open("D:\\新建文件夹\\keshe\\keshe\\k.txt", ios::out);
	for (int i = 0; i < a.sum; i++)
	{
		text << "楼号:" << a.b[i].num << "此楼为" << a.b[i].sex << "生寝室" << endl;
		for (int j = 0; j < a.b[i].sum; i++)
		{
			text << "	寝室编号:" << a.b[i].r[j].num << endl;
			for (int k = 1; k <= a.b[i].r[j].q; k++)
			{
				if (a.b[i].r[j].bed[k] != 0)
				{
					text << "		" << k << "号床:" << endl;
					text << "			姓名:" << a.b[i].r[j].m[k - 1].name << endl;
					text << "			性别:" << a.b[i].r[j].m[k - 1].sex << endl;
					text << "			学号:" << a.b[i].r[j].m[k - 1].num << endl;
					text << "			班级号:" << a.b[i].r[j].m[k - 1].clas << endl;
				}
				else
				{
					text << "		  " << k << "号床：" << endl;
					text << "			空" << endl;
				}
			}
		}
	}

	return 0;
}
